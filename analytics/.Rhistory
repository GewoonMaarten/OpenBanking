internet_gb = internet_gb %>%
gsub("\\D+", -1, internet_gb) %>%
as.numeric() %>%
ifelse(internet_gb >= 1000, internet_gb / 1000, internet_gb)
)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("\\D+", -1, bel_minuten),
sms = gsub("\\D+", -1, sms),
internet_gb = internet_gb %>%
gsub("\\D+", -1, .) %>%
as.numeric() %>%
ifelse(. >= 1000, . / 1000, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("\\D+", -1, bel_minuten),
sms = gsub("\\D+", -1, sms),
internet_gb = internet_gb %>%
gsub("\\D+", -1, .) %>%
as.numeric() %>%
ifelse(. >= 1000, . / 1000, internet_gb)
)
data_new <- data_new %>%
mutate(
bel_minuten = gsub("\\D+", -1, bel_minuten),
sms = gsub("\\D+", -1, sms),
internet_gb = internet_gb %>%
gsub("\\D+", -1, .) %>%
as.numeric()
)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("\\D+", -1, bel_minuten),
sms = gsub("\\D+", -1, sms),
internet_gb = internet_gb %>%
gsub("\\D+", -1, .) %>%
as.numeric()
)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("\\D+", -1, bel_minuten),
sms = gsub("\\D+", -1, sms),
internet_gb = internet_gb %>%
gsub("\\D+", -1, .)
)
View(data_new)
data <- read_xlsx("data/telecom/telecom_data_benjamin.xlsx")
View(data)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d]+", -1, bel_minuten),
sms = gsub("[^\\.\\d]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[^\\.\\d]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s\\W]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[\^\\.\\d\\s\\W]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[\\^\\.\\d\\s\\W]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[\\^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[\\^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[\\^\\.\\d\\s]+", -1, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten),
sms = gsub("[^\\.\\d\\s]+", -1, sms),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten, perl = TRUE),
sms = gsub("[^\\.\\d\\s]+", -1, sms, perl = TRUE),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE)
)
View(data_new)
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten, perl = TRUE),
sms = gsub("[^\\.\\d\\s]+", -1, sms, perl = TRUE),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number()
)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = gsub("[^\\.\\d\\s]+", -1, bel_minuten, perl = TRUE),
sms = gsub("[^\\.\\d\\s]+", -1, sms, perl = TRUE),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number()
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 1000, . / 1000, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 100, . / 1000, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 1000, . / 1000, .)
)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 500, . / 1000, .)
)
View(data_new)
library(skimr)
skim(data_new)
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 500, . / 1000, .)
) %>%
drop_na()
skim(data_new)
write_rds("data/telecom/telecom_clean.rds")
write_rds(data_new, "data/telecom/telecom_clean.rds")
library(h2o)
library(tidyverse)
data <- read_rds("data/telecom/telecom_clean.rds")
View(data)
View(data_new)
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 500, . / 1000, .)
) %>%
drop_na()
View(data_new)
data <- read_xlsx("data/telecom/telecom_data_benjamin.xlsx")
data_new <- data %>% clean_names(case = "snake")
data_new <- data_new %>%
mutate(
bel_minuten = bel_minuten %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
sms = sms %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number(),
internet_gb = internet_gb %>%
gsub("[^\\.\\d\\s]+", -1, ., perl = TRUE) %>%
parse_number() %>%
ifelse(. >= 500, . / 1000, .)
) %>%
drop_na()
View(data_new)
write_rds(data_new, "data/telecom/telecom_clean.rds")
library(h2o)
library(tidyverse)
data <- read_rds("data/telecom/telecom_clean.rds")
View(data)
data_hex = as.h2o(data, destination_frame = "data_hex")
h2o.init()
data_hex = as.h2o(data, destination_frame = "data_hex")
tokenize <- function(words) {
tokenized <- h2o.tokenize(words, "\\\\W+")
#convert to lower
tokenized_lower <- h2o.tolower(tokenized)
#remove short words
tokenized_lengths <- h2o.nchar(tokenized_lower)
tokenized_filtered <- tokenized_lower[is.na(tokenized_lengths) || tokenized_lengths >= 2,]
#remove numbers
tokenized_words <- tokenized_filtered[h2o.grep("[0-9]", tokenized_filtered, invert = TRUE, output.logical = TRUE),]
}
words <- tokenize(data_hex$provider)
words
w2v_model <- h2o.word2vec(
words,
word_model = "Skipgram"
)
tekst_vec <- h2o.transform(w2v_model, words, aggregate_method = "AVERAGE")
valid <- !is.na(tekst_vec$C1)
data_hex_new <- h2o.cbind(data_hex[valid,], tekst_vec[valid,])
View(as.data.frame(data_hex_new))
table(data_new$provider)
?h2o.kmeans
library(factoextra)
?h2o.kmeans
#Split the dataset
data_hex_new_split <- h2o.splitFrame(
data_hex_new,
ratios = 0.8,
seed = 4043
)
h2o.kmeans(
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
estimate_k = TRUE
)
h2o.kmeans(
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
k = 10,
estimate_k = TRUE
)
h2o.kmeans(
init = "PlusPlus",
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
k = 10,
estimate_k = TRUE
)
h2o.kmeans(
init = "PlusPlus",
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
k = 5,
estimate_k = TRUE
)
kmeans_model <- h2o.kmeans(
init = "PlusPlus",
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
k = 5,
estimate_k = TRUE
)
h2o.predict(kmeans_model, data_hex_new)
View(as.data.frame(h2o.predict(kmeans_model, data_hex_new)))
?h2o.predict
data_fit <- h2o.predict(kmeans_model, data_hex_new)
data_fit
data_hex_new$predict <- h2o.predict(kmeans_model, data_hex_new)
data_hex_new
data_df <- as.data.frame(data_hex_new)
library(ggplot2)
skim(data_df)
names(data_df)
ggplot(data_df, aes(x = prijs , y = bel_minuten)) +
geom_point(color = data_df$predict)
ggplot(data_df, aes(x = prijs , y = bel_minuten)) +
geom_point(color = as.factor(data_df$predict))
ggplot(data_df, aes(x = prijs , y = bel_minuten, color = as.factor(predict))) +
geom_point()
ggplot(data_df, aes(x = prijs , y = sms, color = as.factor(predict))) +
geom_point()
ggplot(data_df, aes(x = prijs , y = internet_gb, color = as.factor(predict))) +
geom_point()
data_df[1,]
View(data_df[1,])
View(data_df[1,1:10])
View(data_df[1,])
View(data_df[1,c(1:10, 112)])
View(data_df[23,c(1:10, 112)])
data_set %>%
filter(
prijs <= row$prijs
)
get_similar <- function(row, data_set) {
data_set %>%
filter(
prijs <= row$prijs
)
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs & predict == row$predict
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs < row$prijs & predict == row$predict
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs > row$prijs & predict == row$predict
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs < row$prijs & predict == row$predict
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
data_df[23,c(1:10, 112)]
closest(data_df, data_df[23,2])
closest<-function(xv,sv){ xv[which(abs(xv-sv)==min(abs(xv-sv)))] }
closest(data_df, data_df[23,2])
closest(data_df[,2], data_df[23,2])
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs < row$prijs
,predict == row$predict
,bel_minuten %in% closest(data_df[,2], row[,2])
,sms %in% closest(data_df[,3], row[,3])
)
head(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs < row$prijs
,predict == row$predict
,bel_minuten %in% closest(data_df[,2], row[,2])
,sms %in% closest(data_df[,3], row[,3])
)
(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs < row$prijs
,predict == row$predict
,bel_minuten %in% closest(data_df[,2], row[,2])
,sms %in% closest(data_df[,3], row[,3])
,internet_gb %in% closest(data_df[,4], row[,4])
)
(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
closest(data_df[,4], data_df[23,4])
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs
,predict == row$predict
,bel_minuten %in% closest(data_df[,2], row[,2])
,sms %in% closest(data_df[,3], row[,3])
,internet_gb %in% closest(data_df[,4], row[,4])
)
(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs
,predict == row$predict
,bel_minuten %in% closest(data_df[,2], row[,2])
,sms %in% closest(data_df[,3], row[,3])
,(internet_gb %in% closest(data_df[,4], row[,4]) | internet_gb > row$internet_gb)
)
(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
install.packages(c("factoextra", "psych"))
library(factoextra)
fviz_nbclust(data_df, kmeans, method = "wss") +
geom_vline( xintercept = 3, linetype = 2)
View(data_df)
View(data_df[,c(2:10, 12:111)])
fviz_nbclust(data_df[,c(2:10, 12:111)], kmeans, method = "wss") +
geom_vline( xintercept = 3, linetype = 2)
kmeans_model <- h2o.kmeans(
init = "PlusPlus",
training_frame = data_hex_new_split[[1]],
validation_frame = data_hex_new_split[[2]],
k = 5
)
data_hex_new$predict <- h2o.predict(kmeans_model, data_hex_new)
data_hex_new
data_df <- as.data.frame(data_hex_new)
names(data_df)
ggplot(data_df, aes(x = prijs , y = internet_gb, color = as.factor(predict))) +
geom_point()
get_similar <- function(row, data_set) {
data_set <- data_set %>%
filter(
prijs <= row$prijs
,predict == row$predict
)
(data_set[,c(1:10, 112)])
}
get_similar(data_df[23,c(1:10, 112)], data_df)
```{r}
plot(cars)
